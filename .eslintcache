[{"C:\\Users\\d\\desktop\\swen344\\react-final-htv5447\\src\\index.js":"1","C:\\Users\\d\\desktop\\swen344\\react-final-htv5447\\src\\mycomponent.js":"2","C:\\Users\\d\\Desktop\\swen344\\react-final-htv5447\\src\\index.js":"3","C:\\Users\\d\\Desktop\\swen344\\react-final-htv5447\\src\\mycomponent.js":"4","C:\\Users\\d\\Desktop\\swen344\\react-final-htv5447\\src\\CourseList.js":"5","C:\\Users\\d\\Desktop\\swen344\\react-final-htv5447\\src\\Edit.js":"6","C:\\Users\\d\\Desktop\\swen344\\react-final-htv5447\\src\\Add.js":"7"},{"size":541,"mtime":1606890500854,"results":"8","hashOfConfig":"9"},{"size":3483,"mtime":1606890492273,"results":"10","hashOfConfig":"9"},{"size":536,"mtime":1607139163646,"results":"11","hashOfConfig":"12"},{"size":3483,"mtime":1606890492273,"results":"13","hashOfConfig":"12"},{"size":2277,"mtime":1607147602123,"results":"14","hashOfConfig":"12"},{"size":3530,"mtime":1607147527446,"results":"15","hashOfConfig":"12"},{"size":3340,"mtime":1607147049475,"results":"16","hashOfConfig":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"hg5cg8",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"jgkyqj",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"C:\\Users\\d\\desktop\\swen344\\react-final-htv5447\\src\\index.js",[],["36","37"],"C:\\Users\\d\\desktop\\swen344\\react-final-htv5447\\src\\mycomponent.js",["38"],"import React, { Component } from 'react';\r\nimport {Button, Input, Label, Modal, ModalBody, ModalFooter} from 'reactstrap';\r\n\r\nclass MyComponent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={data: \"\",\r\n                firstName: \"\", //For capturing user input\r\n                lastName: \"\", //For capturing user input\r\n                showModal: false,\r\n                testMessage: \"\"}\r\n    }\r\n\r\n    updateData = (apiResponse) => {\r\n        this.setState({data: apiResponse})\r\n    }\r\n\r\n    fetchMessage = () => {\r\n        //In package.json add \"proxy\": \"http://localhost:5000\" \r\n        //This will allow redirect to REST api in Flask w/o CORS errors\r\n         fetch('/test_message')\r\n         .then(\r\n             response => response.json() \r\n             )//The promise response is returned, then we extract the json data\r\n         .then (jsonOutput => //jsonOutput now has result of the data extraction\r\n                  {\r\n                      this.setState({testMessage: jsonOutput})\r\n                    }\r\n              )\r\n      }\r\n\r\n    fetchData = () => {\r\n        //In package.json add \"proxy\": \"http://localhost:5000\" \r\n        //This will allow redirect to REST api in Flask w/o CORS errors\r\n         fetch('/example_api')\r\n         .then(\r\n             response => response.json() \r\n             )//The promise response is returned, then we extract the json data\r\n         .then (jsonOutput => //jsonOutput now has result of the data extraction\r\n                  {\r\n                      this.updateData(jsonOutput)\r\n                    }\r\n              )\r\n      }\r\n    componentDidMount(){\r\n        this.fetchData();\r\n    }\r\n\r\n    updateFirstName = (e) =>\r\n     { this.setState({firstName: e.target.value}) //Update the text data in state\r\n    }\r\n    updateLastName = (e) => \r\n    { this.setState({lastName: e.target.value}) //Update the text data in state\r\n    }\r\n\r\n    handleSubmit = ()=> {\r\n            let msg = \r\n            'Your name is ' + this.state.firstName + ' ' + this.state.lastName; //Use the updated state variables to capture the user input\r\n            this.setState({showModal: true,\r\n                    summary: msg})\r\n    }\r\n    render(){\r\n        {/*If the data has not yet been loaded from the server, return empty page */}\r\n        if ( this.state.data == null )\r\n        return (<div>No data</div>)\r\n        else\r\n        {\r\n        return (\r\n            <div className='m-4'>\r\n                <div><h2>The api response is: {this.state.data}</h2>\r\n                <Label for=\"fName\">First Name</Label>\r\n                <Input id=\"fName\" type='text' placeholder=\"Enter firstname\" onChange={this.updateFirstName}></Input>\r\n                <Label for=\"lName\">Last Name</Label>\r\n                <Input id=\"lName\" type='text' placeholder='Enter lastname' onChange={this.updateLastName}></Input>\r\n                <Button normal onClick={this.handleSubmit}>Submit</Button>\r\n                <Modal isOpen={this.state.showModal} onOpened={this.fetchMessage}>\r\n                    <ModalBody>{this.state.summary}\r\n                    <p>The message was: { this.state.testMessage}</p></ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={()=>this.setState({showModal:false})}>Ok</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                </div>\r\n            </div>\r\n        )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MyComponent;","C:\\Users\\d\\Desktop\\swen344\\react-final-htv5447\\src\\index.js",[],["39","40"],"C:\\Users\\d\\Desktop\\swen344\\react-final-htv5447\\src\\mycomponent.js",["41"],"C:\\Users\\d\\Desktop\\swen344\\react-final-htv5447\\src\\CourseList.js",[],"C:\\Users\\d\\Desktop\\swen344\\react-final-htv5447\\src\\Edit.js",["42","43"],"import React, { Component } from 'react';\r\nimport {Button,Label, Input, ModalHeader, Modal, ModalBody, ModalFooter} from 'reactstrap';\r\n\r\nclass Edit extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={appear: false, name: this.props.name,c_desc:this.props.c_desc, details:this.props.details,department:this.props.department, list:[]\r\n    };\r\n\r\n}\r\nupdateList = (apiResponse) => {\r\n    this.setState({list: apiResponse})\r\n}\r\n\r\n\r\nfetchList = () => {\r\n    //In package.json add \"proxy\": \"http://localhost:5000\" \r\n    //This will allow redirect to REST api in Flask w/o CORS errors\r\n     fetch('/department')\r\n     .then(\r\n         response => response.json() \r\n         )//The promise response is returned, then we extract the json data\r\n     .then (jsonOutput => //jsonOutput now has result of the data extraction\r\n              {\r\n                  this.updateList(jsonOutput)\r\n                }\r\n          )\r\n  }\r\ncomponentDidMount(){\r\n    this.fetchList();\r\n}\r\n\r\n\r\n    toggle = () =>{\r\n        this.setState({\r\n          appear: !this.state.appear\r\n        });\r\n      }\r\n    \r\n    updateName = (e) =>\r\n     { this.setState({name: e.target.value}) \r\n    }\r\n    updateDescription = (e) => \r\n    { this.setState({c_desc: e.target.value}) \r\n    }\r\n    updateDetails = (e) => \r\n    { this.setState({details: e.target.value}) \r\n    }\r\n    updateDepartment = (e) => \r\n    { this.setState({department: e.target.value}) \r\n    }\r\n    updateCourse = (id)=>{\r\n        fetch('/coursedata/'+ id, {\r\n            method:\"PUT\",\r\n            headers:{\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify({name: this.state.name, c_desc: this.state.c_desc, details:this.state.details, department: this.state.department})\r\n      \r\n        }\r\n        \r\n        )\r\n    }\r\n    \r\n    renderList = (data) =>{\r\n        return(\r\n            <option>{data.department}</option>\r\n        )\r\n    }\r\n    \r\n      render(){\r\n        return (\r\n        <div>\r\n          <Button onClick={this.toggle}>Edit</Button>\r\n    \r\n          <Modal\r\n            isOpen={this.state.appear} toggle={this.toggle}\r\n          >\r\n            <ModalHeader  toggle={this.toggle} closeButton>Edit Course</ModalHeader>\r\n            <ModalBody>\r\n                <Label for=\"Name\">Course Name</Label>\r\n                <Input id=\"Name\" type='text' placeholder= {this.props.name} onChange={this.updateName}></Input>\r\n                <Label for=\"Description\">Course Description</Label>\r\n                <Input id=\"Description\" type='text' placeholder={this.props.c_desc} onChange={this.updateDescription}></Input>\r\n                <Label for=\"Details\">Course Details</Label>\r\n                <Input id=\"Details\" type='text' placeholder={this.props.details} onChange={this.updateDetails}></Input>\r\n                <Label for=\"Department\">Department</Label>\r\n                <Input type=\"select\" name=\"department\" id=\"Department\" placeholder={this.props.department} onChange = {this.updateDepartment}>{this.state.list.map(this.renderList)}\r\n                </Input>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n            <Button color = \"primary\" onClick= {this.updateCourse(this.props.id)} onClick={this.toggle} onClick = {this.props.refresh}>\r\n                Ok\r\n              </Button>\r\n              <Button color = \"secondary\" onClick={this.toggle}>\r\n                Cancel\r\n              </Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n        </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    \r\n    export default Edit;",["44","45"],"C:\\Users\\d\\Desktop\\swen344\\react-final-htv5447\\src\\Add.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":63,"column":9,"nodeType":"52","messageId":"53","endLine":63,"endColumn":86},{"ruleId":"46","replacedBy":"54"},{"ruleId":"48","replacedBy":"55"},{"ruleId":"50","severity":1,"message":"51","line":63,"column":9,"nodeType":"52","messageId":"53","endLine":63,"endColumn":86},{"ruleId":"56","severity":1,"message":"57","line":90,"column":83,"nodeType":"58","endLine":90,"endColumn":104},{"ruleId":"56","severity":1,"message":"57","line":90,"column":105,"nodeType":"58","endLine":90,"endColumn":135},{"ruleId":"46","replacedBy":"59"},{"ruleId":"48","replacedBy":"60"},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["61"],["62"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["61"],["62"],"no-global-assign","no-unsafe-negation"]